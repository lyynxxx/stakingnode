table netdev filter {
        chain ingress {
                type filter hook ingress device "ens3" priority -500; policy accept;
                ip frag-off & 8191 != 0 counter packets 0 bytes 0 drop
                tcp flags & (fin | syn | rst | psh | ack | urg) == fin | syn | rst | psh | ack | urg counter packets 0 bytes 0 drop
                tcp flags & (fin | syn | rst | psh | ack | urg) == 0x0 counter packets 0 bytes 0 drop
                tcp flags syn tcp option maxseg size 1-535 counter packets 0 bytes 0 drop
                ip saddr { 0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 198.18.0.0/15, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0-255.255.255.255 } counter packets 0 bytes 0 drop
        }
}

table inet my_table {
        chain input {
                type filter hook input priority filter; policy accept;
                ct state established,related accept
                iif "lo" accept
                icmp type echo-request limit rate 1/second accept
                meta l4proto udp ct state new jump udp_chain
                tcp flags & (fin | syn | rst | ack) == syn ct state new jump tcp_chain
                meta l4proto udp drop
                meta l4proto tcp reject with tcp reset
                counter packets 0 bytes 0 reject
        }

        chain forward {
                type filter hook forward priority filter; policy drop;
        }

        chain output {
                type filter hook output priority filter; policy accept;
        }

        chain tcp_chain {
                tcp dport 2992 counter packets 0 bytes 0 limit rate 4/second accept
        }

        chain udp_chain {
        }
}

table inet mangle {
        chain prerouting {
                type filter hook prerouting priority mangle; policy accept;
                ct state invalid counter packets 0 bytes 0 drop
                tcp flags & (fin | syn | rst | ack) != syn ct state new counter packets 0 bytes 0 drop
        }
}
